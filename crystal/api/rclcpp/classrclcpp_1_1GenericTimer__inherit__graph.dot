digraph "rclcpp::GenericTimer&lt; FunctorT, std::enable_if&lt; rclcpp::function_traits::same_arguments&lt; FunctorT, VoidCallbackType &gt;::value||rclcpp::function_traits::same_arguments&lt; FunctorT, TimerCallbackType &gt;::value &gt;::type * &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="rclcpp::GenericTimer\l\< FunctorT, std::enable\l_if\< rclcpp::function_traits\l::same_arguments\< FunctorT,\l VoidCallbackType \>::value\|\|\lrclcpp::function_traits::same\l_arguments\< FunctorT, TimerCallbackType\l \>::value \>::type * \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="rclcpp::TimerBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classrclcpp_1_1TimerBase.html"];
}
